---
- name: install DC/OS master
  shell: cd /tmp/dcos-install/genconf/serve/; sudo bash dcos_install.sh master --disable-preflight
  sudo: yes
  ignore_errors: yes
  tags:
    - dcos

- set_fact: colon=":"
  tags:
    - dcos

- name: change UDP port for spartan
  lineinfile:
    dest=/opt/mesosphere/etc/spartan.json
    regexp="  \"udp_port.*"
    line="  \"udp_port\"{{colon}} 553,"
    state=present
  sudo: yes
  tags:
    - dcos

- name: change TCP port for spartan
  lineinfile:
    dest=/opt/mesosphere/etc/spartan.json
    regexp="  \"tcp_port.*"
    line="  \"tcp_port\"{{colon}} 553"
    state=present
  sudo: yes
  tags:
    - dcos

- name: change default HTTP port for adminrouter
  lineinfile: dest=/opt/mesosphere/active/adminrouter/nginx/conf/nginx.conf regexp=".*listen [0-9]+ default_server;" line="        listen 8000 default_server;" state=present
  sudo: yes
  tags:
    - dcos

- name: change default HTTPS port for adminrouter
  lineinfile: dest=/opt/mesosphere/active/adminrouter/nginx/conf/nginx.conf regexp=".*listen [0-9]+ ssl spdy default_server;" line="        listen 8443 ssl spdy default_server;" state=present
  sudo: yes
  tags:
    - dcos

# - name: install leader configuration
#   sudo: yes
#   yum:
#     name: "{{ mesos_master_package }}"
#     state: present
#   tags:
#     - mesos
#     - bootstrap
#
# - name: configure mesos-master unit file
#   sudo: yes
#   replace:
#     dest: /etc/systemd/system/mesos-master.service
#     regexp: "=network.target"
#     replace: '=zookeeper.service'
#   when: mesos_mode == "leader"
#   notify:
#     - reload unit files
#   tags:
#     - mesos
#
# - name: configure mesos-master
#   sudo: yes
#   template:
#     src: mesos-master.sysconfig.j2
#     dest: /etc/sysconfig/mesos-master
#   notify:
#     - restart mesos leader
#   tags:
#     - mesos
#
# - name: write leader credentials
#   sudo: yes
#   when: do_mesos_framework_auth|bool or do_mesos_follower_auth|bool
#   template:
#     src: master-credentials.j2
#     dest: /etc/sysconfig/mesos-credentials
#     mode: 0600
#   notify:
#     - restart mesos leader
#   tags:
#     - mesos
#
# - name: delete leader credentials
#   sudo: yes
#   when: not do_mesos_framework_auth|bool and not do_mesos_follower_auth|bool
#   file:
#     dest: /etc/sysconfig/mesos-credentials
#     state: absent
#   tags:
#     - mesos
#
# - name: wait for zookeeper service to be registered
#   wait_for:
#     host: "{{ mesos_zk_dns }}"
#     port: "{{ mesos_zk_port }}"
#     delay: 10
#     timeout: 300
#     state: present
#   tags:
#     - marathon
#
# - name: wait for zookeeper to listen
#   command: "/usr/local/bin/zookeeper-wait-for-listen.sh localhost"
#
# - name: create zookeeper acl
#   sudo: yes
#   run_once: yes
#   command: "{{ mesos_zk_acl_cmd }}"
#   notify:
#     - restart mesos leader
#   when: zk_mesos_user_secret is defined
#   run_once: true
#   register: zk_acl_mesos
#   until: zk_acl_mesos.rc == 0
#   retries: 5
#   delay: 10
#   tags:
#     - mesos
#
# - name: write iptables configuration
#   run_once: true
#   command: consul-cli kv-write --token={{ consul_acl_secure_token }} secure/mesos/leader/ip_tables {{ do_mesos_iptables }}
#   tags:
#     - mesos
#
# - name: deploy iptables configuration
#   sudo: yes
#   copy:
#     src: "{{ item.src }}"
#     dest: "{{ item.dest }}"
#   with_items:
#     - src: mesos-leader-consul.cfg
#       dest: /etc/consul-template/config.d
#     - src: mesos-leader-iptables.tmpl
#       dest: /etc/consul-template/templates
#   notify:
#     - reload consul-template
#   tags:
#     - mesos
#
# - include: nginx-proxy.yml
